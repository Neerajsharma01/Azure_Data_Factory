{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Data-Vault-Pipelines"
		},
		"AzureSqlDatabase_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_Linked_Service'"
		},
		"AzurePostgreSql_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql_Linked_Service'"
		},
		"AzureKeyVault_Linked_Service_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://DataVault-Key-Vault.vault.azure.net/"
		},
		"Snowflake_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflake_Linked_Service'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_Linked_Service_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_Linked_Service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_HUB_ITEM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_ITEM_ID",
						"type": "varchar"
					},
					{
						"name": "ITEM_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HUB_ITEM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_SAT_ITEM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_ITEM_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ITEM_DESC",
						"type": "varchar"
					},
					{
						"name": "CURRENT_PRICE",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WHOLESALE_PRICE",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BRAND_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BRAND",
						"type": "varchar"
					},
					{
						"name": "CLASS_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CLASS",
						"type": "varchar"
					},
					{
						"name": "CATEGORY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CATEGORY",
						"type": "varchar"
					},
					{
						"name": "MANUFACT_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MANUFACT",
						"type": "varchar"
					},
					{
						"name": "SIZE",
						"type": "varchar"
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_ITEM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql_Linked_Service_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_Linked_Service",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzurePostgresSQL-Pwd"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('Snowflake_Linked_Service_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_Linked_Service",
							"type": "LinkedServiceReference"
						},
						"secretName": "Snowflake-pass"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_HUB_PROMOTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_PROMOTION_ID",
						"type": "varchar"
					},
					{
						"name": "PROMOTION_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HUB_PROMOTION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_SAT_PROMOTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_PROMOTION_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "START_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "END_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ITEM_ID",
						"type": "varchar"
					},
					{
						"name": "DISCOUNT_COST",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PROMO_NAME",
						"type": "varchar"
					},
					{
						"name": "PROMO_TYPE",
						"type": "varchar"
					},
					{
						"name": "MIN_QTY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MAX_QTY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DISCOUNT_ACTIVE",
						"type": "varchar"
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_PROMOTION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_Item_Info')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "item_desc",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "current_price",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "wholesale_price",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "class_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "class",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "manufact_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "manufact",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "size",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "start_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "end_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_cost",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "min_qty",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "max_qty",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_active",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "retail",
					"table": "item_info"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Data_Vault_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "HK_ITEM_ID",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "ITEM_ID",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "LOAD_DTS",
						"type": "TIMESTAMP_NTZ",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "REC_SRC",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "DATA_VAULT",
					"table": "HUB_ITEM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUB_ITEM_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Flow for Item",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSql_Item_Info",
								"type": "DatasetReference"
							},
							"name": "postgresSQLItemInfo"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_ITEM",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubItemLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_ITEM",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubItem"
						}
					],
					"transformations": [
						{
							"name": "SelectTableData"
						},
						{
							"name": "Expression"
						},
						{
							"name": "UpdateStrategy"
						},
						{
							"name": "CheckItemIDExists"
						}
					],
					"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'NONE',\n\tformat: 'table') ~> postgresSQLItemInfo\nsource(output(\n\t\tHK_ITEM_ID as string,\n\t\tITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLHubItemLookup\npostgresSQLItemInfo select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nSelectTableData derive(HK_ITEM_ID = md5(item_id),\n\t\tLOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO') ~> Expression\nCheckItemIDExists alterRow(insertIf(iif(isNull(HK_ITEM_ID),true(),false()))) ~> UpdateStrategy\nExpression, AzureSQLHubItemLookup exists(SelectTableData@item_id == AzureSQLHubItemLookup@ITEM_ID,\n\tnegate:true,\n\tbroadcast: 'auto')~> CheckItemIDExists\nUpdateStrategy sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tHK_ITEM_ID as string,\n\t\tITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_ITEM_ID,\n\t\tITEM_ID = item_id,\n\t\tLOAD_DTS,\n\t\tREC_SRC\n\t)) ~> AzureSQLHubItem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSql_Item_Info')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_HUB_ITEM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAT_ITEM_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Flow for Item",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSql_Item_Info",
								"type": "DatasetReference"
							},
							"name": "postgresSQLItemInfo"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_ITEM",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubItem"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_SAT_ITEM",
								"type": "DatasetReference"
							},
							"name": "AzureSQLSATItemLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_SAT_ITEM",
								"type": "DatasetReference"
							},
							"name": "AzureSQLSatItemInsert"
						}
					],
					"transformations": [
						{
							"name": "SelectTableData"
						},
						{
							"name": "Expression"
						},
						{
							"name": "JoinHubSourcePostgres"
						},
						{
							"name": "JoinTargetSAT"
						},
						{
							"name": "UpdateStrategy"
						}
					],
					"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> postgresSQLItemInfo\nsource(output(\n\t\tHK_ITEM_ID as string,\n\t\tITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLHubItem\nsource(output(\n\t\tHK_ITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tITEM_DESC as string,\n\t\tCURRENT_PRICE as double,\n\t\tWHOLESALE_PRICE as double,\n\t\tBRAND_ID as integer,\n\t\tBRAND as string,\n\t\tCLASS_ID as integer,\n\t\tCLASS as string,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY as string,\n\t\tMANUFACT_ID as integer,\n\t\tMANUFACT as string,\n\t\tSIZE as string,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLSATItemLookup\npostgresSQLItemInfo select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nSelectTableData derive(LOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO') ~> Expression\nExpression, AzureSQLHubItem join(SelectTableData@item_id == AzureSQLHubItem@ITEM_ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinHubSourcePostgres\nJoinHubSourcePostgres, AzureSQLSATItemLookup join(AzureSQLHubItem@HK_ITEM_ID == AzureSQLSATItemLookup@HK_ITEM_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTargetSAT\nJoinTargetSAT alterRow(insertIf(iif(isNull(AzureSQLSATItemLookup@HK_ITEM_ID),true(),false())),\n\tupdateIf(iif(not(isNull(AzureSQLSATItemLookup@HK_ITEM_ID)),true(),false()))) ~> UpdateStrategy\nUpdateStrategy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tHK_ITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tITEM_DESC as string,\n\t\tCURRENT_PRICE as double,\n\t\tWHOLESALE_PRICE as double,\n\t\tBRAND_ID as integer,\n\t\tBRAND as string,\n\t\tCLASS_ID as integer,\n\t\tCLASS as string,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY as string,\n\t\tMANUFACT_ID as integer,\n\t\tMANUFACT as string,\n\t\tSIZE as string,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_ITEM_ID = AzureSQLHubItem@HK_ITEM_ID,\n\t\tLOAD_DTS = Expression@LOAD_DTS,\n\t\tITEM_DESC = SelectTableData@item_desc,\n\t\tCURRENT_PRICE = SelectTableData@current_price,\n\t\tWHOLESALE_PRICE = SelectTableData@wholesale_price,\n\t\tBRAND_ID = SelectTableData@brand_id,\n\t\tBRAND = SelectTableData@brand,\n\t\tCLASS_ID = SelectTableData@class_id,\n\t\tCLASS = SelectTableData@class,\n\t\tCATEGORY_ID = SelectTableData@category_id,\n\t\tCATEGORY = SelectTableData@category,\n\t\tMANUFACT_ID = SelectTableData@manufact_id,\n\t\tMANUFACT = SelectTableData@manufact,\n\t\tSIZE = SelectTableData@size,\n\t\tREC_SRC = Expression@REC_SRC\n\t)) ~> AzureSQLSatItemInsert"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSql_Item_Info')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_HUB_ITEM')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_SAT_ITEM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUB_PROMO_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Flow for Item",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSql_Item_Info",
								"type": "DatasetReference"
							},
							"name": "postgresSQLItemInfo"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_PROMOTION",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubPromotionLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_PROMOTION",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubPromotion"
						}
					],
					"transformations": [
						{
							"name": "SelectTableData"
						},
						{
							"name": "Expression"
						},
						{
							"name": "UpdateStrategy"
						},
						{
							"name": "CheckPromoIDExists"
						},
						{
							"name": "FilterPromoData"
						}
					],
					"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'NONE',\n\tformat: 'table') ~> postgresSQLItemInfo\nsource(output(\n\t\tHK_PROMOTION_ID as string,\n\t\tPROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLHubPromotionLookup\npostgresSQLItemInfo select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nFilterPromoData derive(HK_PROMOTION_ID = md5(promo_id),\n\t\tLOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO',\n\t\tPROMOTION_ID = toString(promo_id)) ~> Expression\nCheckPromoIDExists alterRow(insertIf(iif(isNull(HK_PROMOTION_ID),true(),false()))) ~> UpdateStrategy\nExpression, AzureSQLHubPromotionLookup exists(Expression@PROMOTION_ID == AzureSQLHubPromotionLookup@PROMOTION_ID,\n\tnegate:true,\n\tbroadcast: 'auto')~> CheckPromoIDExists\nSelectTableData filter(not(isNull(promo_id))) ~> FilterPromoData\nUpdateStrategy sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tHK_PROMOTION_ID as string,\n\t\tPROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_PROMOTION_ID,\n\t\tPROMOTION_ID = promo_id,\n\t\tLOAD_DTS,\n\t\tREC_SRC\n\t)) ~> AzureSQLHubPromotion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSql_Item_Info')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_HUB_PROMOTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAT_PROMOTION_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Flow for Item",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSql_Item_Info",
								"type": "DatasetReference"
							},
							"name": "postgresSQLItemInfo"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_HUB_PROMOTION",
								"type": "DatasetReference"
							},
							"name": "AzureSQLHubPromotion"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_SAT_PROMOTION",
								"type": "DatasetReference"
							},
							"name": "AzureSQLSATPromotionLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSql_SAT_PROMOTION",
								"type": "DatasetReference"
							},
							"name": "AzureSQLSatPromotionInsert"
						}
					],
					"transformations": [
						{
							"name": "SelectTableData"
						},
						{
							"name": "Expression"
						},
						{
							"name": "JoinHubSourcePostgres"
						},
						{
							"name": "JoinTargetSAT"
						},
						{
							"name": "UpdateStrategy"
						}
					],
					"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> postgresSQLItemInfo\nsource(output(\n\t\tHK_PROMOTION_ID as string,\n\t\tPROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLHubPromotion\nsource(output(\n\t\tHK_PROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tSTART_DATE as timestamp,\n\t\tEND_DATE as timestamp,\n\t\tITEM_ID as string,\n\t\tDISCOUNT_COST as double,\n\t\tPROMO_NAME as string,\n\t\tPROMO_TYPE as string,\n\t\tMIN_QTY as integer,\n\t\tMAX_QTY as integer,\n\t\tDISCOUNT_ACTIVE as string,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLSATPromotionLookup\npostgresSQLItemInfo select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nSelectTableData derive(LOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO',\n\t\tPROMOTION_ID = toString(promo_id)) ~> Expression\nExpression, AzureSQLHubPromotion join(Expression@PROMOTION_ID == AzureSQLHubPromotion@PROMOTION_ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinHubSourcePostgres\nJoinHubSourcePostgres, AzureSQLSATPromotionLookup join(AzureSQLHubPromotion@HK_PROMOTION_ID == AzureSQLSATPromotionLookup@HK_PROMOTION_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTargetSAT\nJoinTargetSAT alterRow(insertIf(iif(isNull(AzureSQLSATPromotionLookup@HK_PROMOTION_ID),true(),false())),\n\tupdateIf(iif(not(isNull(AzureSQLSATPromotionLookup@HK_PROMOTION_ID)),true(),false()))) ~> UpdateStrategy\nUpdateStrategy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tHK_PROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tSTART_DATE as timestamp,\n\t\tEND_DATE as timestamp,\n\t\tITEM_ID as string,\n\t\tDISCOUNT_COST as double,\n\t\tPROMO_NAME as string,\n\t\tPROMO_TYPE as string,\n\t\tMIN_QTY as integer,\n\t\tMAX_QTY as integer,\n\t\tDISCOUNT_ACTIVE as string,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_PROMOTION_ID = AzureSQLHubPromotion@HK_PROMOTION_ID,\n\t\tLOAD_DTS = Expression@LOAD_DTS,\n\t\tSTART_DATE = SelectTableData@start_date,\n\t\tEND_DATE = SelectTableData@end_date,\n\t\tITEM_ID = SelectTableData@item_id,\n\t\tDISCOUNT_COST = SelectTableData@discount_cost,\n\t\tPROMO_NAME = SelectTableData@promo_name,\n\t\tPROMO_TYPE = SelectTableData@promo_type,\n\t\tMIN_QTY = SelectTableData@min_qty,\n\t\tMAX_QTY = SelectTableData@max_qty,\n\t\tDISCOUNT_ACTIVE = SelectTableData@discount_active,\n\t\tREC_SRC = Expression@REC_SRC\n\t)) ~> AzureSQLSatPromotionInsert"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSql_Item_Info')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_HUB_PROMOTION')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_SAT_PROMOTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Vault_HUB_SAT_ITEM_Load_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HUB_ITEM_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUB_ITEM_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"postgresSQLItemInfo": {},
									"AzureSQLHubItemLookup": {},
									"AzureSQLHubItem": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					},
					{
						"name": "SAT_ITEM_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUB_ITEM_DataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SAT_ITEM_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"postgresSQLItemInfo": {},
									"AzureSQLHubItem": {},
									"AzureSQLSATItemLookup": {},
									"AzureSQLSatItemInsert": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-08T16:06:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/HUB_ITEM_DataFlow')]",
				"[concat(variables('factoryId'), '/dataflows/SAT_ITEM_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Vault_HUB_SAT_PROMOTION_Load_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HUB_PROMO_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUB_PROMO_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"postgresSQLItemInfo": {},
									"AzureSQLHubPromotionLookup": {},
									"AzureSQLHubPromotion": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SAT_PROMOTION_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUB_PROMO_DataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SAT_PROMOTION_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"postgresSQLItemInfo": {},
									"AzureSQLHubPromotion": {},
									"AzureSQLSATPromotionLookup": {},
									"AzureSQLSatPromotionInsert": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-08T16:06:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/HUB_PROMO_DataFlow')]",
				"[concat(variables('factoryId'), '/dataflows/SAT_PROMOTION_DataFlow')]"
			]
		}
	]
}