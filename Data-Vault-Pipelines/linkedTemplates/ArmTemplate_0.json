{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Data-Vault-Pipelines"
		},
		"AzurePostgreSql_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql_Linked_Service'"
		},
		"AzureKeyVault_Linked_Service_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://DataVault-Key-Vault.vault.azure.net/"
		},
		"Snowflake_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflake_Linked_Service'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_Linked_Service_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql_Linked_Service_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_Linked_Service",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzurePostgresSQL-Pwd"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('Snowflake_Linked_Service_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_Linked_Service",
							"type": "LinkedServiceReference"
						},
						"secretName": "Snowflake-pass"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_Item_Info')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "item_desc",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "current_price",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "wholesale_price",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "class_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "class",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "manufact_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "manufact",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "size",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "start_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "end_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_cost",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promo_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "min_qty",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "max_qty",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_active",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "retail",
					"table": "item_info"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Data_Vault_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "HK_ITEM_ID",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "ITEM_ID",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "LOAD_DTS",
						"type": "TIMESTAMP_NTZ",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "REC_SRC",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "DATA_VAULT",
					"table": "HUB_ITEM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Item_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Flow for Item",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSql_Item_Info",
								"type": "DatasetReference"
							},
							"name": "postgresSQLItemInfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Snowflake_Data_Vault_Tables",
								"type": "DatasetReference"
							},
							"name": "SnowflakeHUBITEM"
						}
					],
					"transformations": [
						{
							"name": "SelectTableData"
						},
						{
							"name": "Expression"
						}
					],
					"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'NONE',\n\tformat: 'table') ~> postgresSQLItemInfo\npostgresSQLItemInfo select(mapColumn(\n\t\titem_id,\n\t\titem_desc,\n\t\tcurrent_price,\n\t\twholesale_price,\n\t\tbrand_id,\n\t\tbrand,\n\t\tclass_id,\n\t\tclass,\n\t\tcategory_id,\n\t\tcategory,\n\t\tmanufact_id,\n\t\tmanufact,\n\t\tsize,\n\t\tpromo_id,\n\t\tstart_date,\n\t\tend_date,\n\t\tdiscount_cost,\n\t\tpromo_name,\n\t\tpromo_type,\n\t\tmin_qty,\n\t\tmax_qty,\n\t\tdiscount_active\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nSelectTableData derive(HK_ITEM_ID = md5(item_id),\n\t\titem_id = item_id,\n\t\tLOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO') ~> Expression\nExpression sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tHK_ITEM_ID as string,\n\t\tITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstageInsert: true,\n\tmapColumn(\n\t\tHK_ITEM_ID,\n\t\tITEM_ID = item_id,\n\t\tLOAD_DTS,\n\t\tREC_SRC\n\t)) ~> SnowflakeHUBITEM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSql_Item_Info')]",
				"[concat(variables('factoryId'), '/datasets/Snowflake_Data_Vault_Tables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Vault_Hub_Load_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Item_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Item_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"postgresSQLItemInfo": {},
									"SnowflakeHUBITEM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Item_DataFlow')]"
			]
		}
	]
}