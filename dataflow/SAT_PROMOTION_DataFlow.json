{
	"name": "SAT_PROMOTION_DataFlow",
	"properties": {
		"description": "Data Flow for Item",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzurePostgreSql_Item_Info",
						"type": "DatasetReference"
					},
					"name": "postgresSQLItemInfo"
				},
				{
					"dataset": {
						"referenceName": "AzureSql_HUB_PROMOTION",
						"type": "DatasetReference"
					},
					"name": "AzureSQLHubPromotion"
				},
				{
					"dataset": {
						"referenceName": "AzureSql_SAT_PROMOTION",
						"type": "DatasetReference"
					},
					"name": "AzureSQLSATPromotionLookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSql_SAT_ITEM",
						"type": "DatasetReference"
					},
					"name": "AzureSQLSatItemInsert"
				},
				{
					"dataset": {
						"referenceName": "AzureSql_SAT_ITEM",
						"type": "DatasetReference"
					},
					"name": "AzureSQLSatItemUpdate"
				}
			],
			"transformations": [
				{
					"name": "SelectTableData"
				},
				{
					"name": "Expression"
				},
				{
					"name": "JoinHubSourcePostgres"
				},
				{
					"name": "JoinTargetSAT"
				},
				{
					"name": "UpdateStrategy"
				},
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\titem_id as string,\n\t\titem_desc as string,\n\t\tcurrent_price as double,\n\t\twholesale_price as double,\n\t\tbrand_id as integer,\n\t\tbrand as string,\n\t\tclass_id as integer,\n\t\tclass as string,\n\t\tcategory_id as integer,\n\t\tcategory as string,\n\t\tmanufact_id as integer,\n\t\tmanufact as string,\n\t\tsize as string,\n\t\tpromo_id as integer,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tdiscount_cost as double,\n\t\tpromo_name as string,\n\t\tpromo_type as string,\n\t\tmin_qty as integer,\n\t\tmax_qty as integer,\n\t\tdiscount_active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> postgresSQLItemInfo\nsource(output(\n\t\tHK_PROMOTION_ID as string,\n\t\tPROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLHubPromotion\nsource(output(\n\t\tHK_PROMOTION_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tSTART_DATE as timestamp,\n\t\tEND_DATE as timestamp,\n\t\tITEM_ID as string,\n\t\tDISCOUNT_COST as double,\n\t\tPROMO_NAME as string,\n\t\tPROMO_TYPE as string,\n\t\tMIN_QTY as integer,\n\t\tMAX_QTY as integer,\n\t\tDISCOUNT_ACTIVE as string,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSQLSATPromotionLookup\npostgresSQLItemInfo select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTableData\nSelectTableData derive(LOAD_DTS = currentTimestamp(),\n\t\tREC_SRC = 'ITEM_INFO',\n\t\tPROMOTION_ID = toString(promo_id)) ~> Expression\nExpression, AzureSQLHubPromotion join(Expression@PROMOTION_ID == AzureSQLHubPromotion@PROMOTION_ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinHubSourcePostgres\nJoinHubSourcePostgres, AzureSQLSATPromotionLookup join(AzureSQLHubPromotion@HK_PROMOTION_ID == AzureSQLSATPromotionLookup@HK_PROMOTION_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTargetSAT\nJoinTargetSAT alterRow(insertIf(iif(isNull(AzureSQLSATPromotionLookup@HK_PROMOTION_ID),true(),false())),\n\tupdateIf(iif(not(isNull(AzureSQLSATPromotionLookup@HK_PROMOTION_ID)),true(),false()))) ~> UpdateStrategy\nUpdateStrategy split(isInsert(1),\n\tisUpdate(1),\n\tdisjoint: false) ~> ConditionalSplit1@(insert, update)\nConditionalSplit1@insert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tHK_ITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tITEM_DESC as string,\n\t\tCURRENT_PRICE as double,\n\t\tWHOLESALE_PRICE as double,\n\t\tBRAND_ID as integer,\n\t\tBRAND as string,\n\t\tCLASS_ID as integer,\n\t\tCLASS as string,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY as string,\n\t\tMANUFACT_ID as integer,\n\t\tMANUFACT as string,\n\t\tSIZE as string,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_ITEM_ID = ConditionalSplit1@insert@HK_ITEM_ID,\n\t\tLOAD_DTS = ConditionalSplit1@insert@LOAD_DTS,\n\t\tITEM_DESC = ConditionalSplit1@insert@item_desc,\n\t\tCURRENT_PRICE = ConditionalSplit1@insert@current_price,\n\t\tWHOLESALE_PRICE = ConditionalSplit1@insert@wholesale_price,\n\t\tBRAND_ID = ConditionalSplit1@insert@brand_id,\n\t\tBRAND = ConditionalSplit1@insert@brand,\n\t\tCLASS_ID = ConditionalSplit1@insert@class_id,\n\t\tCLASS = ConditionalSplit1@insert@class,\n\t\tCATEGORY_ID = ConditionalSplit1@insert@category_id,\n\t\tCATEGORY = ConditionalSplit1@insert@category,\n\t\tMANUFACT_ID = ConditionalSplit1@insert@manufact_id,\n\t\tMANUFACT = ConditionalSplit1@insert@manufact,\n\t\tSIZE = ConditionalSplit1@insert@size,\n\t\tREC_SRC = ConditionalSplit1@insert@REC_SRC\n\t)) ~> AzureSQLSatItemInsert\nConditionalSplit1@update sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tHK_ITEM_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tITEM_DESC as string,\n\t\tCURRENT_PRICE as double,\n\t\tWHOLESALE_PRICE as double,\n\t\tBRAND_ID as integer,\n\t\tBRAND as string,\n\t\tCLASS_ID as integer,\n\t\tCLASS as string,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY as string,\n\t\tMANUFACT_ID as integer,\n\t\tMANUFACT as string,\n\t\tSIZE as string,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['HK_ITEM_ID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHK_ITEM_ID = ConditionalSplit1@update@HK_ITEM_ID,\n\t\tLOAD_DTS = ConditionalSplit1@update@LOAD_DTS\n\t)) ~> AzureSQLSatItemUpdate"
		}
	}
}